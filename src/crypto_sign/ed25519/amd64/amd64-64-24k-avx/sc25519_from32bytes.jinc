u64[16] order = {0x5812631A5CF5D3ED, 0x14DEF9DEA2F79CD6, 
                 0x0000000000000000, 0x1000000000000000,
                 0xB024C634B9EBA7DA, 0x29BDF3BD45EF39AC,
                 0x0000000000000000, 0x2000000000000000,
                 0x60498C6973D74FB4, 0x537BE77A8BDE7359,
                 0x0000000000000000, 0x4000000000000000,
                 0xC09318D2E7AE9F68, 0xA6F7CEF517BCE6B2,
                 0x0000000000000000, 0x8000000000000000};
                
inline fn smaller(reg u64 a_in b_in) -> reg u64
{
	reg u64 a a2 atop abot atop2;
	reg u64 b b2 btop bbot;
	reg u64 atopbelowbtop atopeqbtop abotbelowbbot;
	
	a = a_in;
	b = b_in;
	a2 = a;
	b2 = b;
	
	atop = a >> 32;
	abot = a2 & 4294967295;
	btop = b >> 32;
	bbot = b2 & 4294967295;
	
	atop2 = atop;
	atopbelowbtop = atop - btop;
	atopbelowbtop >>= 63;
	
	atopeqbtop = atop2 ^ btop;
	atopeqbtop -= 1;
	atopeqbtop >>= 63;
	
	abotbelowbbot = abot - bbot;
	abotbelowbbot >>= 63;
	
	atopeqbtop &= abotbelowbbot;
	atopbelowbtop |= atopeqbtop;
	
	return atopbelowbtop;
}

inline fn sc25519_from32bytes(reg u64[4] r) -> reg u64[4]
{
	reg u64[4] t;
	reg u64 b mask temp;
	inline int i j;
	
	for j=3 downto -1
	{
		b = 0;
		for i=0 to 4
		{
			b += order[4*j + i];
			t[i] = r[i];
			t[i] -= b;
			b = smaller(r[i], b);
		}
		mask = b - 1;
		for i=0 to 4
		{
			temp = r[i];
			temp ^= t[i];
			temp &= mask;
			r[i] ^= temp;
		}
	}
	
	return r;
}
