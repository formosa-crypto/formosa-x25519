require "mul4.jinc"
require "sqr4.jinc"
require "invert4.jinc"

inline fn __sqr_root4(reg u64[4] f, #msf reg u64 msf) -> reg u64[4], #msf reg u64
{
  reg u32 n_sqrs;
  stack u64[4] t_inv_s fs;
  #mmx reg u64 msf_s;
  
  fs = #copy(f);
  t_inv_s, msf = __invert4_ss(fs, msf);
  f = #copy(fs);
  
  n_sqrs = 125;
  f, msf = __it_sqr4_x2(f, n_sqrs, msf); // pow(t0, 2**(2*125), p) + p
  msf_s = #mov_msf(msf);
  
  f  = __sqr4_rr(f);
  f = __mul4_rsr(t_inv_s, f);
  f  = __sqr4_rr(f);
  msf = #mov_msf(msf_s);
  
  return f, msf;
}

inline fn __sqr_root4_ss(stack u64[4] fs, #msf reg u64 msf) -> stack u64[4], #msf reg u64
{
  stack u64[4] hs;
  reg u64[4] f h;

  f = #copy(fs);
  h, msf = __sqr_root4(f, msf);
  hs = #copy(h);

  return hs, msf;
}
